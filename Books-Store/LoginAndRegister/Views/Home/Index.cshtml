@inject UserManager<ApplicationUsers> UserManager
@inject SignInManager<ApplicationUsers> SignInManager
@model BookDisplayModel
@{
    ViewData["Title"] = "Home Page";
}
<div class="my-4 mt-4">
    <form class="row row-cols-lg-auto g-3 align-items-center">
        <div class="col-12">
            <label class="visually-hidden" for="strem">Search Books..</label>
            <div class="input-group">
                @* <div class="input-group-text"></div> *@
                <input type="text" class="form-control" id="strem" value="@Model.strem" name="strem" placeholder="Books..">
            </div>
        </div>

        <div class="col-12">
            <label class="visually-hidden" for="GenreId">Genres</label>
            <select class="form-select" id="GenreId" name="GenreId">
                <option selected>Choose...</option>
                @foreach (var genre in Model.Genres)
                {
                    <option selected="@(genre.Id==Model.GenreId)" value="@genre.Id">@genre.GenreName</option>
                }

            </select>
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary">Search</button>
            <a href="/home/Index" type="reset" class="btn btn-dark">Reset</a>

        </div>
    </form>
</div>


@* 
@if (book.Image != null && book.Image.Length > 0)
{
    <div class="col-md-2 Poster" style="background-image:url(data:image\/*;base64,@(Convert.ToBase64String(movie.Poster))">
    </div>
}
else
{
    <img src="~/img/OIP.jpg" class="card-img-top" width="100%" height="250px" alt="...">

} *@





<div class="w-100 d-flex flex-wrap ">
    @foreach (var book in Model.Books)
    {
        <div class="card mt-2 mx-3 mb-4 " style="width:14rem;">


            @if (book.Image != null && book.Image.Length > 0)
            {
                <img src="data:image\/*;base64,@(Convert.ToBase64String(book.Image))" class="card-img-top" width="100%" height="250px" alt="...">
            }
            else
            {
                <img src="~/img/OIP.jpg" class="card-img-top" width="100%" height="250px" alt="...">

            }

            @* <img src="data:image\/*;base64,@(Convert.ToBase64String(book.Image))" class="card-img-top" width="100%" height="250px" alt="..."> *@
            
            <div class="card-body cssssGo text-center">
                
                <h5 class="card-title">
                    @book.BookName
                </h5>
                <p class="card-text">
                <p>Author: @book.AuthorName </p>
                <p>Price: $@book.Price</p>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <button type="button" onclick="Add(@book.Id)" class="btn btn-primary">Add to cart</button>
                        if (User.IsInRole("Admin"))
                        {

                        <a class="btn btn-outline-info text light mt-3" asp-controller="Product" asp-action="Edit" asp-route-BookId="@book.Id">Edit Book</a>
                        <a href="javascript:;" class="btn btn-outline-danger mt-3 Js-delete" data-id="@book.Id">Delete Book</a>
                        }
                    }
                    
                    else
                    {
                    <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Login">Add to Cart</a>
                    }
                

            </div>
        </div>
    }
    
</div>

@section scripts{

    <script>
        async function Add(bookId) {
            try {

                var response = await fetch(`/Cart/AddItem?bookId=${bookId}`);
                if (response.status == 200) {
                    var result = await response.json();

                    console.log(result)
                    var CartCountEl = document.getElementById("CartCount");
                    CartCountEl.innerHTML = result;

                }
            } catch (err) {
                console.log(err);
            }
        }



    </script>
    
    <script>
        updateCartCount();
        $(document).ready(function () {
            $('.Js-delete').on('click', function () {
                var btn = $(this);

                bootbox.confirm({
                    message: "Are you sure you want to delete this Book?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-danger'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-secondary'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: '/api/Product/?BookId=' + btn.data('id'),
                                method: 'DELETE',
                                success: function () {
                                    btn.closest('.card').fadeOut();
                                    alert('Book deleted successfully');
                                },
                                error: function () {
                                    alert('Something went wrong');
                                }
                            });
                        }
                    }
                });
            });
        });


    </script>

   }

